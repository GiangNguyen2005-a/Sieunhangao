document.addEventListener("DOMContentLoaded", () => {
  const content = document.getElementById("main-content");
  const links = document.querySelectorAll(".nav-links a");
  let employees = [];

  // L·∫•y danh s√°ch nh√¢n vi√™n t·ª´ backend
  fetch("get_employees.php")
    .then(response => response.json())
    .then(data => {
      employees = data;
      loadPage("tracuu");
    })
    .catch(error => console.error("L·ªói khi l·∫•y danh s√°ch nh√¢n vi√™n:", error));

  const homeTemplate = `
  <div class="wrapper">
    <h1>Ch√†o m·ª´ng tr·ªü l·∫°i!</h1>
    <p>H·ªá th·ªëng qu·∫£n l√Ω thu·∫ø TNCN</p>
    <div class="menu-wrapper">
      <div class="menu-row">
        <div class="menu-item blue" data-page="form"><div class="icon"><i class="fas fa-file-alt"></i></div>Nh·∫≠p th√¥ng tin thu·∫ø</div>
        <div class="menu-item yellow" data-page="declare"><div class="icon"><i class="fas fa-calculator"></i></div>T·∫°o t·ªù khai</div>
      </div>
      <div class="menu-row">
        <div class="menu-item green" data-page="xacnhan"><div class="icon"><i class="fas fa-check-circle"></i></div>X√°c nh·∫≠n thu·∫ø ƒë√£ n·ªôp</div>
        <div class="menu-item red" data-page="tracuu"><div class="icon"><i class="fas fa-search"></i></div>Tra c·ª©u thu·∫ø</div>
      </div>
    </div>
  </div>`;

  const formTemplate = `
  <div class="wrapper">
    <h1>Nh·∫≠p th√¥ng tin thu·∫ø TNCN</h1>
    <form id="taxForm" class="tax-form">
      <div class="form-left">
        ${generateInput("mst", "M√£ s·ªë thu·∫ø")}
        ${generateInput("maNV", "M√£ nh√¢n vi√™n")}
        ${generateInput("hoTen", "H·ªç v√† t√™n")}
        ${generateInput("ngaySinh", "Ng√†y sinh", "date")}
        ${generateInput("cccd", "S·ªë CCCD")}
        ${generateInput("diaChi", "ƒê·ªãa ch·ªâ c∆∞ tr√∫")}
      </div>
      <div class="form-right">
        ${generateInput("thuNhap", "Thu nh·∫≠p ch√≠nh", "number")}
        ${generateInput("thuong", "Th∆∞·ªüng", "number")}
        ${generateInput("phuCap", "Ph·ª• c·∫•p", "number")}
        ${generateInput("giamTru", "Gi·∫£m tr·ª´ b·∫£n th√¢n", "number")}
        ${generateInput("baoHiem", "B·∫£o hi·ªÉm", "number")}
        <div class="form-group">
          <label for="nhomNV">Nh√≥m nh√¢n vi√™n:</label>
          <select id="nhomNV">
            <option value="co_hop_dong">C∆∞ tr√∫ c√≥ HƒêLƒê > 3 th√°ng</option>
            <option value="khong_hop_dong">C∆∞ tr√∫ kh√¥ng HƒêLƒê (kh·∫•u tr·ª´ 10%)</option>
            <option value="khong_cu_tru">Kh√¥ng c∆∞ tr√∫ (kh·∫•u tr·ª´ 20%)</option>
          </select>
        </div>
        <button type="submit" class="submit-btn">L∆∞u th√¥ng tin</button>
        <button type="button" class="calculate-btn" onclick="tinhThue()">T√≠nh thu·∫ø</button>
        <div id="ketQuaThue" class="result" style="display: none;"></div>
      </div>
    </form>
    <div class="employee-card-list" id="employeeCardListTax"></div>
  </div>`;

  const tracuuTemplate = `
  <div class="wrapper">
    <h1>Tra c·ª©u th√¥ng tin thu·∫ø</h1>
    <form class="search-form">
      <input type="text" id="searchInput" placeholder="Nh·∫≠p m√£ s·ªë thu·∫ø, h·ªç t√™n ho·∫∑c CCCD">
      <button type="submit">üîç Tra c·ª©u</button>
    </form>
    <div class="result-section" id="resultSection"></div>
  </div>`;

  const declarationTemplate = `
  <div class="wrapper">
    <h1>Ch·ªçn nh√¢n vi√™n ƒë·ªÉ t·∫°o t·ªù khai thu·∫ø</h1>
    <form class="search-form" id="searchEmployeeForm">
      <input type="text" id="searchEmployee" placeholder="Nh·∫≠p m√£ nh√¢n vi√™n ho·∫∑c t√™n nh√¢n vi√™n...">
      <button type="submit">üîç T√¨m ki·∫øm</button>
    </form>
    <div class="employee-card-list" id="employeeCardListDeclare"></div>
    <div class="form-wrapper" style="display: none;">
      <h2>T·∫°o t·ªù khai thu·∫ø</h2>
      <form class="declaration-form" id="declarationForm">
        ${generateInput("tax-id", "M√£ s·ªë thu·∫ø")}
        ${generateInput("full-name", "H·ªç v√† t√™n")}
        ${generateInput("period", "K·ª≥ k√™ khai", "month")}
        ${generateInput("income", "T·ªïng thu nh·∫≠p", "number")}
        ${generateInput("tax-amount", "T·ªïng thu·∫ø ph·∫£i n·ªôp", "number")}
        <button type="submit" class="submit-btn">T·∫°o t·ªù khai</button>
      </form>
      <div id="maToKhaiBox" class="result" style="display: none;"></div>
    </div>
  </div>`;

  const confirmTemplate = `
  <div class="wrapper">
    <h1>Ch·ªçn nh√¢n vi√™n ƒë·ªÉ x√°c nh·∫≠n ƒë√£ n·ªôp thu·∫ø</h1>
    <form class="search-form" id="searchEmployeeConfirmForm">
      <input type="text" id="searchEmployeeConfirm" placeholder="Nh·∫≠p m√£ nh√¢n vi√™n ho·∫∑c t√™n nh√¢n vi√™n...">
      <button type="submit">üîç T√¨m ki·∫øm</button>
    </form>
    <div class="employee-card-list" id="employeeCardListConfirm"></div>
    <div class="form-wrapper" style="display: none;">
      <h2>X√°c nh·∫≠n thu·∫ø ƒë√£ n·ªôp</h2>
      <form class="confirm-form" id="confirmForm">
        ${generateInput("mst", "M√£ s·ªë thu·∫ø")}
        ${generateInput("hoTen", "H·ªç v√† t√™n")}
        ${generateInput("ky", "K·ª≥ t√≠nh thu·∫ø", "month")}
        ${generateInput("soTien", "S·ªë ti·ªÅn ƒë√£ n·ªôp", "number")}
        ${generateInput("ngayNop", "Ng√†y n·ªôp", "date")}
        <button type="submit" class="submit-btn">X√°c nh·∫≠n</button>
      </form>
      <div id="result" class="result" style="display: none;"></div>
    </div>
  </div>`;

  function generateInput(id, label, type = "text") {
    return `<div class="form-group"><label for="${id}">${label}:</label><input type="${type}" id="${id}" required></div>`;
  }

  function renderEmployeeCards(containerId, data, handler) {
    const container = document.getElementById(containerId);
    container.innerHTML = "";
    data.forEach(emp => {
      const card = document.createElement("div");
      card.className = "employee-card";
      card.innerHTML = `
        <h3>${emp.name}</h3>
        <p><strong>M√£ NV:</strong> ${emp.id}</p>
        <p><strong>Ph√≤ng ban:</strong> ${emp.department}</p>
        <button class="select-btn">Ch·ªçn</button>
      `;
      card.querySelector("button").addEventListener("click", () => handler(emp));
      container.appendChild(card);
    });
  }

  function selectEmployeeForTax(emp) {
    // ƒêi·ªÅn m√£ nh√¢n vi√™n v√† h·ªç t√™n
    document.getElementById("maNV").value = emp.id;
    document.getElementById("hoTen").value = emp.name;

    // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin chi ti·∫øt c·ªßa nh√¢n vi√™n
    fetch("get_employee_info.php", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ maNV: emp.id })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error("L·ªói server: " + response.statusText);
      }
      return response.json();
    })
    .then(data => {
      if (data.success) {
        // ƒêi·ªÅn c√°c th√¥ng tin kh√°c t·ª´ b·∫£ng NhanVien v√†o form
        document.getElementById("ngaySinh").value = data.data.NgaySinh || "";
        document.getElementById("cccd").value = data.data.CCCD || "";
        document.getElementById("quocTich").value = data.data.QuocTich || "";
        document.getElementById("diaChi").value = data.data.DiaChi || "";
      } else {
        alert("L·ªói: " + data.error);
      }
    })
    .catch(error => alert("L·ªói khi l·∫•y th√¥ng tin nh√¢n vi√™n: " + error.message));
  }

  function selectEmployeeForDeclaration(emp) {
    document.getElementById("tax-id").value = emp.id;
    document.getElementById("full-name").value = emp.name;
    document.querySelector(".form-wrapper").style.display = "block";
 // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin thu·∫ø v√† ƒëi·ªÅn t·ªïng thu nh·∫≠p
 handleFetch(
  "get_tax_info.php",
  {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ maNV: emp.id })
  },
  data => {
    // ƒêi·ªÅn t·ªïng thu nh·∫≠p v√†o tr∆∞·ªùng "income"
    document.getElementById("income").value = data.data.TongThuNhap || 0;
  },
  error => {
    console.error("L·ªói khi l·∫•y th√¥ng tin thu·∫ø:", error);
    document.getElementById("income").value = 0; // ƒê·∫∑t m·∫∑c ƒë·ªãnh l√† 0 n·∫øu kh√¥ng t√¨m th·∫•y
  }
);
  }

  function selectEmployeeForConfirmation(emp) {
    document.getElementById("mst").value = emp.id;
    document.getElementById("hoTen").value = emp.name;
    document.querySelector(".form-wrapper").style.display = "block";
  }

  function tinhThue() {
    const thuNhap = parseFloat(document.getElementById("thuNhap").value) || 0;
    const thuong = parseFloat(document.getElementById("thuong").value) || 0;
    const phuCap = parseFloat(document.getElementById("phuCap").value) || 0;
    const giamTru = parseFloat(document.getElementById("giamTru").value) || 0;
    const baoHiem = parseFloat(document.getElementById("baoHiem").value) || 0;
    const nhomNV = document.getElementById("nhomNV").value;

    const thuNhapChiuThue = thuNhap + thuong + phuCap - giamTru - baoHiem;
    let thuePhaiNop = 0;

    if (nhomNV === "co_hop_dong") {
      thuePhaiNop = tinhThueLuyTien(thuNhapChiuThue);
    } else if (nhomNV === "khong_hop_dong") {
      thuePhaiNop = thuNhapChiuThue * 0.1;
    } else if (nhomNV === "khong_cu_tru") {
      thuePhaiNop = thuNhapChiuThue * 0.2;
    }

    const ketQuaThue = document.getElementById("ketQuaThue");
    ketQuaThue.innerHTML = `
      <h3>K·∫øt qu·∫£ t√≠nh thu·∫ø</h3>
      <p><strong>Thu nh·∫≠p ch·ªãu thu·∫ø:</strong> ${thuNhapChiuThue.toLocaleString("vi-VN")} VND</p>
      <p><strong>Thu·∫ø ph·∫£i n·ªôp:</strong> ${thuePhaiNop.toLocaleString("vi-VN")} VND</p>
    `;
    ketQuaThue.style.display = "block";
  }

  function tinhThueLuyTien(thuNhapChiuThue) {
    let thue = 0;
    if (thuNhapChiuThue <= 0) return 0;

    if (thuNhapChiuThue <= 5000000) {
      thue = thuNhapChiuThue * 0.05;
    } else if (thuNhapChiuThue <= 10000000) {
      thue = 5000000 * 0.05 + (thuNhapChiuThue - 5000000) * 0.1;
    } else if (thuNhapChiuThue <= 18000000) {
      thue = 5000000 * 0.05 + 5000000 * 0.1 + (thuNhapChiuThue - 10000000) * 0.15;
    } else if (thuNhapChiuThue <= 32000000) {
      thue = 5000000 * 0.05 + 5000000 * 0.1 + 8000000 * 0.15 + (thuNhapChiuThue - 18000000) * 0.2;
    } else if (thuNhapChiuThue <= 52000000) {
      thue = 5000000 * 0.05 + 5000000 * 0.1 + 8000000 * 0.15 + 14000000 * 0.2 + (thuNhapChiuThue - 32000000) * 0.25;
    } else if (thuNhapChiuThue <= 80000000) {
      thue = 5000000 * 0.05 + 5000000 * 0.1 + 8000000 * 0.15 + 14000000 * 0.2 + 20000000 * 0.25 + (thuNhapChiuThue - 52000000) * 0.3;
    } else {
      thue = 5000000 * 0.05 + 5000000 * 0.1 + 8000000 * 0.15 + 14000000 * 0.2 + 20000000 * 0.25 + 28000000 * 0.3 + (thuNhapChiuThue - 80000000) * 0.35;
    }

    return thue;
  }

  function loadPage(page) {
    links.forEach(link => link.classList.remove("active"));
    document.querySelector(`[data-page="${page}"]`)?.classList.add("active");
  
    if (page === "form") {
      content.innerHTML = formTemplate;
      renderEmployeeCards("employeeCardListTax", employees, selectEmployeeForTax);
      document.getElementById("taxForm")?.addEventListener("submit", e => {
        e.preventDefault();
        e.preventDefault();
  const thuNhap = parseFloat(document.getElementById("thuNhap").value) || 0;
  const thuong = parseFloat(document.getElementById("thuong").value) || 0;
  const phuCap = parseFloat(document.getElementById("phuCap").value) || 0;
  const giamTru = parseFloat(document.getElementById("giamTru").value) || 0;
  const baoHiem = parseFloat(document.getElementById("baoHiem").value) || 0;

  // Ki·ªÉm tra gi√° tr·ªã √¢m
  if (thuNhap < 0 || thuong < 0 || phuCap < 0 || giamTru < 0 || baoHiem < 0) {
    alert("C√°c gi√° tr·ªã thu nh·∫≠p, th∆∞·ªüng, ph·ª• c·∫•p, gi·∫£m tr·ª´, b·∫£o hi·ªÉm kh√¥ng ƒë∆∞·ª£c √¢m!");
    return;
  }
        const formData = new FormData(e.target);
        fetch("save_tax_info.php", {
          method: "POST",
          body: formData
        })
        .then(response => {
          if (!response.ok) {
            throw new Error("L·ªói server: " + response.statusText);
          }
          return response.text();
        })
        .then(text => {
          console.log("D·ªØ li·ªáu tr·∫£ v·ªÅ:", text);
          try {
            const data = JSON.parse(text);
            if (data.success) {
              alert(data.message);
              e.target.reset();
            } else {
              alert("L·ªói: " + data.error);
            }
          } catch (error) {
            alert("L·ªói ph√¢n t√≠ch d·ªØ li·ªáu t·ª´ server: " + error.message + "\nD·ªØ li·ªáu tr·∫£ v·ªÅ: " + text);
          }
        })
        .catch(error => alert("L·ªói k·∫øt n·ªëi: " + error.message));
      });
    } else if (page === "tracuu") {
      content.innerHTML = tracuuTemplate;
      document.querySelector(".search-form")?.addEventListener("submit", e => {
        e.preventDefault();
        const searchInput = document.getElementById("searchInput").value.trim();
        const resultSection = document.getElementById("resultSection");
  
        if (!searchInput) {
          resultSection.innerHTML = "<p>Vui l√≤ng nh·∫≠p th√¥ng tin ƒë·ªÉ tra c·ª©u.</p>";
          return;
        }
  
        fetch("search_tax.php", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ searchInput })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            resultSection.innerHTML = `
              <h3>K·∫øt qu·∫£ tra c·ª©u</h3>
              <p><strong>H·ªç t√™n:</strong> ${data.data.TenNV}</p>
              <p><strong>M√£ s·ªë thu·∫ø:</strong> ${data.data.MST}</p>
              <p><strong>CCCD:</strong> ${data.data.CCCD}</p>
              <p><strong>Thu·∫ø ƒë√£ n·ªôp:</strong> ${Number(data.data.TongThueNop || 0).toLocaleString("vi-VN")} VND</p>
            `;
          } else {
            resultSection.innerHTML = "<p>" + data.error + "</p>";
          }
        })
        .catch(error => resultSection.innerHTML = "<p>L·ªói k·∫øt n·ªëi: " + error + "</p>");
      });
    } else if (page === "declare") {
      content.innerHTML = declarationTemplate;
      renderEmployeeCards("employeeCardListDeclare", employees, selectEmployeeForDeclaration);
      document.getElementById("searchEmployee")?.addEventListener("input", e => {
        const searchTerm = e.target.value.toLowerCase();
        const filteredEmployees = employees.filter(emp => 
          emp.name.toLowerCase().includes(searchTerm) || emp.id.includes(searchTerm)
        );
        renderEmployeeCards("employeeCardListDeclare", filteredEmployees, selectEmployeeForDeclaration);
      });
      document.getElementById("searchEmployeeForm")?.addEventListener("submit", e => {
        e.preventDefault();
        const searchTerm = document.getElementById("searchEmployee").value.toLowerCase();
        const filteredEmployees = employees.filter(emp => 
          emp.name.toLowerCase().includes(searchTerm) || emp.id.includes(searchTerm)
        );
        renderEmployeeCards("employeeCardListDeclare", filteredEmployees, selectEmployeeForDeclaration);
      });
      document.getElementById("declarationForm")?.addEventListener("submit", e => {
        e.preventDefault();
        const formData = new FormData(e.target);
        fetch("save_declaration.php", {
          method: "POST",
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          const box = document.getElementById("maToKhaiBox");
          if (data.success) {
            box.innerHTML = `‚úÖ ƒê√£ t·∫°o t·ªù khai cho <strong>${formData.get("full-name")}</strong><br>M√£ t·ªù khai: <strong>${data.maTK}</strong>`;
            box.style.display = "block";
          } else {
            box.innerHTML = `<p>L·ªói: ${data.error}</p>`;
            box.style.display = "block";
          }
        })
        .catch(error => {
          const box = document.getElementById("maToKhaiBox");
          box.innerHTML = `<p>L·ªói k·∫øt n·ªëi: ${error}</p>`;
          box.style.display = "block";
        });
      });
    } else if (page === "xacnhan") {
      content.innerHTML = confirmTemplate;
      renderEmployeeCards("employeeCardListConfirm", employees, selectEmployeeForConfirmation);
      document.getElementById("searchEmployeeConfirm")?.addEventListener("input", e => {
        const searchTerm = e.target.value.toLowerCase();
        const filteredEmployees = employees.filter(emp => 
          emp.name.toLowerCase().includes(searchTerm) || emp.id.includes(searchTerm)
        );
        renderEmployeeCards("employeeCardListConfirm", filteredEmployees, selectEmployeeForConfirmation);
      });
      document.getElementById("searchEmployeeConfirmForm")?.addEventListener("submit", e => {
        e.preventDefault();
        const searchTerm = document.getElementById("searchEmployeeConfirm").value.toLowerCase();
        const filteredEmployees = employees.filter(emp => 
          emp.name.toLowerCase().includes(searchTerm) || emp.id.includes(searchTerm)
        );
        renderEmployeeCards("employeeCardListConfirm", filteredEmployees, selectEmployeeForConfirmation);
      });
      document.getElementById("confirmForm")?.addEventListener("submit", e => {
        e.preventDefault();
        const formData = new FormData(e.target);
        fetch("save_confirmation.php", {
          method: "POST",
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          const result = document.getElementById("result");
          if (data.success) {
            result.innerHTML = `‚úÖ ƒê√£ x√°c nh·∫≠n n·ªôp thu·∫ø th√†nh c√¥ng cho <strong>${formData.get("hoTen")}</strong><br>M√£ x√°c nh·∫≠n: ${data.maXN}`;
            result.style.display = "block";
          } else {
            result.innerHTML = `<p>L·ªói: ${data.error}</p>`;
            result.style.display = "block";
          }
        })
        .catch(error => {
          const result = document.getElementById("result");
          result.innerHTML = `<p>L·ªói k·∫øt n·ªëi: ${error}</p>`;
          result.style.display = "block";
        });
      });
    } else {
      content.innerHTML = homeTemplate;
    }
  }

  links.forEach(link => {
    link.addEventListener("click", e => {
      e.preventDefault();
      loadPage(link.dataset.page);
    });
  });

  document.addEventListener("click", e => {
    const box = e.target.closest(".menu-item");
    if (box?.dataset.page) {
      loadPage(box.dataset.page);
    }
  });
});